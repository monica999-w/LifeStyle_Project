// <auto-generated />
using System;
using LifeStyle.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LifeStyle.Infrastructure.Migrations
{
    [DbContext(typeof(LifeStyleContext))]
    [Migration("20240514172512_Inital")]
    partial class Inital
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ExercisePlanner", b =>
                {
                    b.Property<int>("ExercisesExerciseId")
                        .HasColumnType("int");

                    b.Property<int>("PlannerId")
                        .HasColumnType("int");

                    b.HasKey("ExercisesExerciseId", "PlannerId");

                    b.HasIndex("PlannerId");

                    b.ToTable("PlannerExercise", (string)null);
                });

            modelBuilder.Entity("LifeStyle.Domain.Models.Exercises.Exercise", b =>
                {
                    b.Property<int>("ExerciseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExerciseId"));

                    b.Property<int>("DurationInMinutes")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExerciseId");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("LifeStyle.Domain.Models.Meal.Meal", b =>
                {
                    b.Property<int>("MealId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MealId"));

                    b.Property<int>("MealType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("NutrientsNutrientId")
                        .HasColumnType("int");

                    b.HasKey("MealId");

                    b.HasIndex("NutrientsNutrientId");

                    b.ToTable("Meals");
                });

            modelBuilder.Entity("LifeStyle.Domain.Models.Meal.Nutrients", b =>
                {
                    b.Property<int>("NutrientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NutrientId"));

                    b.Property<double>("Calories")
                        .HasColumnType("float");

                    b.Property<double>("Carbohydrates")
                        .HasColumnType("float");

                    b.Property<double>("Fat")
                        .HasColumnType("float");

                    b.Property<double>("Protein")
                        .HasColumnType("float");

                    b.HasKey("NutrientId");

                    b.ToTable("Nutrients");
                });

            modelBuilder.Entity("LifeStyle.Domain.Models.Users.UserProfile", b =>
                {
                    b.Property<int>("ProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProfileId"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Height")
                        .HasColumnType("float");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("ProfileId");

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("LifeStyle.Models.Planner.Planner", b =>
                {
                    b.Property<int>("PlannerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlannerId"));

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int");

                    b.HasKey("PlannerId");

                    b.HasIndex("ProfileId");

                    b.ToTable("Planners");
                });

            modelBuilder.Entity("MealPlanner", b =>
                {
                    b.Property<int>("MealsMealId")
                        .HasColumnType("int");

                    b.Property<int>("PlannerId")
                        .HasColumnType("int");

                    b.HasKey("MealsMealId", "PlannerId");

                    b.HasIndex("PlannerId");

                    b.ToTable("PlannerMeal", (string)null);
                });

            modelBuilder.Entity("ExercisePlanner", b =>
                {
                    b.HasOne("LifeStyle.Domain.Models.Exercises.Exercise", null)
                        .WithMany()
                        .HasForeignKey("ExercisesExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LifeStyle.Models.Planner.Planner", null)
                        .WithMany()
                        .HasForeignKey("PlannerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LifeStyle.Domain.Models.Meal.Meal", b =>
                {
                    b.HasOne("LifeStyle.Domain.Models.Meal.Nutrients", "Nutrients")
                        .WithMany()
                        .HasForeignKey("NutrientsNutrientId");

                    b.Navigation("Nutrients");
                });

            modelBuilder.Entity("LifeStyle.Models.Planner.Planner", b =>
                {
                    b.HasOne("LifeStyle.Domain.Models.Users.UserProfile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("MealPlanner", b =>
                {
                    b.HasOne("LifeStyle.Domain.Models.Meal.Meal", null)
                        .WithMany()
                        .HasForeignKey("MealsMealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LifeStyle.Models.Planner.Planner", null)
                        .WithMany()
                        .HasForeignKey("PlannerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
